# Workflow for action builds!
name: Build Game

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [main, experimental, character-selector, more-lua]
  pull_request:
    branches: [main, experimental, character-selector, more-lua]

  # For release builds
  workflow_call:
    inputs:
      buildFlags:
        required: false
        type: string

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  buildLinux:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.2.5
      # Runs a set of commands using the runners shell
      - name: Install Haxelib
        run: |
          sudo apt-get install libvlc-dev
          sudo apt-get install libvlccore-dev
          haxelib setup ~/haxelib
          haxelib install hxcpp > /dev/null --quiet
          haxelib install format > nul --quiet
          haxelib install hxp
          haxe -cp ./setup -D analyzer-optimize -main Main --interp
          haxelib git systools https://github.com/haya3218/retools
      - name: Rebuild systools
        run: haxelib run lime rebuild systools linux
      - name: Create Version Tag
        run: echo "${{github.run_id}}" > VERSION
      - name: Compile
        run: haxelib run lime build Project.xml linux --app-version="4.0.0-${{ github.run_id}}"
      - name: Publish Artifact
        uses: actions/upload-artifact@v2.2.4
        with:
          name: linuxBuild
          path: "export/release/linux/bin"
  